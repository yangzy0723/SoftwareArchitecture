openapi: "3.0.0"
info:
  version: 1.0.0
  title: Products
  license:
    name: MIT
paths:
  /productsService/products:
    get:
      summary: List all products
      operationId: listProducts
      tags:
        - products
      responses:
        '200':
          description: A paged array of products
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /productsService/products/{productId}:
    get:
      summary: Info for a specific product
      operationId: showProductById
      tags:
        - product
      parameters:
        - name: productId
          in: path
          required: true
          description: The id of the product to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Update information for a specific product
      operationId: productIdPatch
      parameters:
        - name: productId
          in: path
          required: true
          description: The id of the product to update
          schema:
            type: string
      requestBody:
        description: The new quantity
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductQuantity'
        required: true
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        '400':
          description: Invalid product data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Product:
      type: object
      required:
        - pid
        - name
        - price
        - category
      properties:
        pid:
          type: string
        name:
          type: string
        price:
          type: number
          format: double
        category:
          type: string
        img:
          type: string
          nullable: true
        stock:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
    ProductQuantity:
      type: object
      required:
        - quantity
      properties:
        quantity:
          type: integer
          format: int32
    Products:
      type: array
      items:
        $ref: "#/components/schemas/Product"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string