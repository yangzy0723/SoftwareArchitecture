#   spring.datasource.name=XXX
#use /home/jojo/my_db to get my_db.mv.db and my_db.trace.db rather than /home/jojo/my_db/
#By design, the in-memory database is volatile, and results in data loss after application restart.
#We can change that behavior by using file-based storage.
spring.datasource.url=jdbc:h2:file:./h2db
spring.datasource.username=yangzy0723
spring.datasource.password=
spring.datasource.driverClassName=org.h2.Driver

#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# By default, the data.sql script executes before Hibernate initialization.
# This aligns the script-based initialization with other database migration tools such as Flyway and Liquibase.
# As we are recreating the schema generated by Hibernate each time, we need to set an additional property:
spring.jpa.defer-datasource-initialization=true
# This modifies the default Spring Boot behavior and populates the data after the schema is generated by Hibernate.

# By default, SQL database initialization is only performed when using an embedded in-memory database.
# To always initialize an SQL database, irrespective of its type, set spring.sql.init.mode to always.
spring.sql.init.mode=always

# When 'spring. jpa. generate ddl' is set to 'true', when the Spring Boot application starts,
# JPA will automatically generate database table structures based on the definition of entity classes.
# This means that JPA will create corresponding database tables based on the annotations of entity classes (such as' @ Entity ',' @ Table ', etc.),
# including table fields, indexes, foreign keys, and other information.
#spring.jpa.generate-ddl=true

# Hibernate will automatically update the database table structure based on the definition of entity classes,
# including adding new tables, columns, or constraints,
# but will not delete or modify existing data.
spring.jpa.hibernate.ddl-auto=update

spring.sql.init.data-locations=classpath:db/h2/data.sql
spring.sql.init.platform=h2

spring.h2.console.path=/h2
spring.h2.console.settings.web-allow-others=true
spring.h2.console.enabled=true